name: CI/CD Docker

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/linho1150/trading
  VERSION: ${{ github.sha }}
  NAME: go_cicd

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v2
      - name: Set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ env.VERSION }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.SEEAR_FLASK_CI_CD }}
          
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest

  deploy:
    needs: build
    name: Deploy
    runs-on: [ self-hosted, label-go ]
    steps:
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'
          
      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.SEEAR_FLASK_CI_CD }}
      - name: Create env file
        run: |
          touch .env
          echo FLASK_APP=${{ secrets.FLASK_APP }} >> .flaskenv
          echo FLASK_ENV=${{ secrets.FLASK_ENV }} >> .flaskenv
          echo CLIENT_ID=${{ secrets.NAVER_CLIENTID }} >> .flaskenv
          echo CLIENT_SECRET=${{ secrets.NAVER_SECRETKEY }} >> .flaskenv
          echo rds_host=${{ secrets.rds_host }} >> .flaskenv
          echo rds_password=${{ secrets.rds_password }} >> .flaskenv
          echo rds_id=${{ secrets.rds_id }} >> .flaskenv
          echo ACCESS_KEY_ID=${{ secrets.ACCESS_KEY_ID }} >> .flaskenv
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .flaskenv
          cat .env
      - name: Docker run
        run: |
          docker stop ${{ env.NAME }} && docker rm ${{ env.NAME }} && docker rmi ${{ env.DOCKER_IMAGE }}:latest
          docker run -d -p 8080:5000 --name go_cicd --restart always ${{ env.DOCKER_IMAGE }}:latest
