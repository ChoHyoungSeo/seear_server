name: CD

on:
  push:
    branches: [ main ]

jobs:
  deploy-prod:
    name: Deploy to production
    runs-on: ubuntu-latest
    environment:
      name: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: ap-northeast-2

    # Deploy image to ECR
    - name: Create .env file
      run: |
        touch .env
        echo FLASK_APP=${{ secrets.FLASK_APP }} >> .env
        echo FLASK_ENV=${{ secrets.FLASK_ENV }} >> .env
        echo CLIENT_ID=${{ secrets.NAVER_CLIENTID }} >> .env
        echo CLIENT_SECRET=${{ secrets.NAVER_SECRETKEY }} >> .env
        cat .env
        
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: seear_cicd
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: seear-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: seear-service
        cluster: seear-cluster
        wait-for-service-stability: true
